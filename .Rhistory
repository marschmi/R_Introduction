getwd()
setwd("/Users/mls528/Desktop/R_Introduction")
?write.csv
?data.frame
?data.frame
?data.frame
?c
# Data structures
cats <- data.frame(coat = c("calico", "black", "tabby"))
# Data structures
cats <- data.frame(coat = c("calico", "black", "tabby"))
cats
# Data structures
cats <- data.frame(coat = c("calico", "black", "tabby"),
weight = c(2.1, 5.0, 3.2),
likes_strings = c(1, 0, 1))
cats
# Data structures
cats_df <- data.frame(coat = c("calico", "black", "tabby"),
weight = c(2.1, 5.0, 3.2),
likes_strings = c(1, 0, 1))
rm(cats)
cats
cats_df
?str
# Structure of cats dataframe
str(cats_df)
cats_df$likes_strings
cats_df$weight + 2
paste("My cat is ", cats_df$coat)
# Adding numerical with categorical?
cats_df$weight + cats_df$coat
typeof(cats_df$weight)
cats_df$weight
typeof(TRUE)
typeof(cats_df$coat)
?write.csv
# Writing files
write.csv(x = cats_df, file = "cats_df.csv")
# Writing files
write.csv(x = cats_df, file = "cats_df.csv",
row.names = FALSE)
# What software do I have?
sessionInfo()
# Writing files
write.csv(x = cats_df, file = "cats_df.csv",
row.names = FALSE, quote = FALES)
# Writing files
write.csv(x = cats_df, file = "cats_df.csv",
row.names = FALSE, quote = FALSE)
# Matrix
example_mat <- matrix(0, ncol = 6, ncol = 3)
# Matrix
example_mat <- matrix(0, ncol = 6, nrow = 3)
example_mat
# Dimensions
dim(example_mat)
dim(cats_df)
download.file("https://raw.githubusercontent.com/swcarpentry/r-novice-gapminder/main/episodes/data/gapminder_data.csv", destfile = "data/gapminder_data.csv")
gapminder <- read.csv("data/gapminder_data.csv")
download.file("https://raw.githubusercontent.com/swcarpentry/r-novice-gapminder/main/episodes/data/gapminder_data.csv", destfile = "gapminder_data.csv)
download.file("https://raw.githubusercontent.com/swcarpentry/r-novice-gapminder/main/episodes/data/gapminder_data.csv", destfile = "gapminder_data.csv")
# Data structures
cats_df <- data.frame(coat = c("calico", "black", "tabby"),
weight = c(2.1, 5.0, 3.2),
likes_strings = c(1, 0, 1))
rm(cats)
cats_df
# Structure of cats dataframe
str(cats_df)
cats_df$weight + 2
# Adding numerical with categorical?
cats_df$weight + cats_df$coat
paste("My cat is ", cats_df$coat)
# Data structures
typeof(cats_df$weight) # double
typeof(TRUE) #logical
typeof(cats_df$coat) # character
# Writing files
write.csv(x = cats_df, file = "cats_df.csv",
row.names = FALSE, quote = FALSE)
# Matrix
example_mat <- matrix(0, ncol = 6, nrow = 3)
example_mat
# Dimensions
dim(example_mat)
dim(cats_df)
# Dimensions
dim(example_mat)
dim(cats_df)
# Subsetting
head(cats_df)
cats_df[3]
cats_df[2]
cats_df[1]
cats_df$coat
str(cats_df[1])
str(cats_df$coat)
cats_df
cats_df[1,]
cats_df[1,2]
cats_df[1:2,2]
1:10
example_mat[1,4]
example_mat[1:2,4]
example_mat[1:2,4:6]
cats_df
cats_df[1:2,1:2]
cats_df[c(1,3), c(1,3)]
xy_var<- c(1,3)
xy_var
cats_df[xy_var, xy_var]
# Install Package!
install.packages("ggplot2")
library("ggplot2")
library(ggmap)
gapminder
# Download Data
download.file("https://raw.githubusercontent.com/swcarpentry/r-novice-gapminder/main/episodes/data/gapminder_data.csv",
destfile = "gapminder_data.csv")
read.csv(file = "gapminder_data.csv")
gapminder_df <- read.csv(file = "gapminder_data.csv")
str(gapminder_df)
dim(gapminder_df)
# Plot the data
ggplot(data = gapminder)
# Plot the data
ggplot(data = gapminder_df)
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp))
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_point()
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp,
color = continent)) +
geom_point()
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp,
color = continent)) +
geom_point(alpha = 0.5)
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp,
color = continent))
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp,
color = continent)) +
geom_point(alpha = 0.5)
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp,
color = continent)) +
geom_point(alpha = 0.5) +
labs(x = "GDP Per Capita", y = "Life Expectancy (yrs)")
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp,
color = continent)) +
geom_point(alpha = 0.5) +
labs(x = "GDP Per Capita", y = "Life Expectancy (yrs)") +
# make multiple plots by continent
facet_wrap(.~continent)
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp,
color = continent)) +
geom_point(alpha = 0.5) +
labs(x = "GDP Per Capita", y = "Life Expectancy (yrs)") +
# make multiple plots by continent
facet_grid(.~continent)
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp,
color = continent)) +
geom_point(alpha = 0.5) +
labs(x = "GDP Per Capita", y = "Life Expectancy (yrs)") +
# make multiple plots by continent
facet_grid(continent~.)
head(gapminder_df)
# Evaluating lifeExp by year
ggplot(data = gapminder_df,
mapping = aes(x = year, y = lifeExp,
color = continent))
# Evaluating lifeExp by year
ggplot(data = gapminder_df,
mapping = aes(x = year, y = lifeExp,
color = continent)) +
# add line to connect years
geom_line()
# Evaluating lifeExp by year
ggplot(data = gapminder_df,
mapping = aes(x = year, y = lifeExp,
# grouping the data
group = continent,
color = continent)) +
# add line to connect years
geom_line()
# Evaluating lifeExp by year
ggplot(data = gapminder_df,
mapping = aes(x = year, y = lifeExp,
# grouping the data
group = country,
color = continent)) +
# add line to connect years
geom_line()
# Evaluating lifeExp by year
ggplot(data = gapminder_df,
mapping = aes(x = year, y = lifeExp,
# grouping the data
group = country,
color = continent)) +
# add line to connect years
geom_line() +
geom_point()
# Evaluating lifeExp by year
ggplot(data = gapminder_df,
mapping = aes(x = year, y = lifeExp,
# grouping the data
group = country)) +
# add line to connect years
geom_line() +
geom_point()
# Evaluating lifeExp by year
ggplot(data = gapminder_df,
mapping = aes(x = year, y = lifeExp,
# grouping the data
group = country)) +
# add line to connect years
geom_line() +
geom_point(aes(color = continent))
# Evaluating lifeExp by year
ggplot(data = gapminder_df,
mapping = aes(x = year, y = lifeExp,
# grouping the data
group = country)) +
# add line to connect years
geom_line(aes(color = continent)) +
geom_point(aes(color = continent))
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp,
color = continent)) +
geom_point(alpha = 0.5) +
labs(x = "GDP Per Capita", y = "Life Expectancy (yrs)") +
# make multiple plots by continent
facet_grid(continent~.)
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp,
color = continent)) +
geom_point(alpha = 0.5) +
labs(x = "GDP Per Capita", y = "Life Expectancy (yrs)")
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp,
color = continent)) +
geom_point(alpha = 0.5) +
labs(x = "GDP Per Capita", y = "Life Expectancy (yrs)") +
scale_x_log10()
?geom_smooth
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp,
color = continent)) +
geom_point(alpha = 0.5) +
labs(x = "GDP Per Capita", y = "Life Expectancy (yrs)") +
scale_x_log10() +
geom_smooth(method = "lm")
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_point(alpha = 0.5) +
labs(x = "GDP Per Capita", y = "Life Expectancy (yrs)") +
scale_x_log10() +
geom_smooth(method = "lm")
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_point(alpha = 0.5, aes(color = continent)) +
labs(x = "GDP Per Capita", y = "Life Expectancy (yrs)") +
scale_x_log10() +
geom_smooth(method = "lm")
?geom_point
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp,
shape = continent)) +
geom_point(alpha = 0.5, aes(color = continent)) +
labs(x = "GDP Per Capita", y = "Life Expectancy (yrs)") +
scale_x_log10() +
geom_smooth(method = "lm")
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_point(alpha = 0.5,
aes(color = continent,
shape = continent)) +
labs(x = "GDP Per Capita", y = "Life Expectancy (yrs)") +
scale_x_log10() +
geom_smooth(method = "lm")
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_point(alpha = 0.5,
aes(color = continent), shape = 15) +
labs(x = "GDP Per Capita", y = "Life Expectancy (yrs)") +
scale_x_log10() +
geom_smooth(method = "lm")
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_point(alpha = 0.5,
aes(color = continent,
shape = continent)) +
labs(x = "GDP Per Capita", y = "Life Expectancy (yrs)") +
scale_x_log10() +
geom_smooth(method = "lm")
head(gapminder_df)
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_point(alpha = 0.5,
aes(color = continent,
shape = continent,
size = pop)) +
labs(x = "GDP Per Capita", y = "Life Expectancy (yrs)") +
scale_x_log10() +
geom_smooth(method = "lm")
# Plot the data
ggplot(data = gapminder_df,
mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_point(alpha = 0.5,
aes(color = continent,
shape = continent,
size = pop)) +
labs(x = "GDP Per Capita", y = "Life Expectancy (yrs)") +
scale_x_log10() +
geom_smooth(method = "lm")
#
ggplot(gapminder_df, aes(x = gdpPercap, y = lifeExp)) +
geom_point(aes(color = continent, size = population), alpha = 0.5) +
geom_smooth(method = "lm") +
scale_x_log10() +
scale_y_log10() +
labs(x = "GDP Per Capita (USD)", y = "Life Expectancy (yrs)")
#
ggplot(gapminder_df, aes(x = gdpPercap, y = lifeExp)) +
geom_point(aes(color = continent, size = pop), alpha = 0.5) +
geom_smooth(method = "lm") +
scale_x_log10() +
scale_y_log10() +
labs(x = "GDP Per Capita (USD)", y = "Life Expectancy (yrs)")
